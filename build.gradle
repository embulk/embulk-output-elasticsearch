plugins {
    id "com.jfrog.bintray" version "1.7"
    id "maven-publish"
    id "com.github.jruby-gradle.base" version "0.1.5"
    id "java"
    id "jacoco"
    id "checkstyle"
}
import com.github.jrubygradle.JRubyExec
repositories {
    mavenCentral()
    jcenter()
    // TODO: Remove this after embulk-base-restclient goes to jcenter.
    maven {
        url "https://dl.bintray.com/embulk-base-restclient/maven"
    }
    maven {
        url "https://jitpack.io"
    }
}
configurations {
    provided
}

group = "org.embulk.output.elasticsearch"
version = "0.4.7"

compileJava.options.encoding = 'UTF-8' // source encoding
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile  "org.embulk:embulk-core:0.9.11"
    provided  "org.embulk:embulk-core:0.9.11"
    compile  "com.github.st-tech:embulk-base-restclient:0.5.6"
    compile  "org.embulk.base.restclient:embulk-util-retryhelper-jetty92:0.5.3"

    testCompile "junit:junit:4.+"
    testCompile "org.embulk:embulk-core:0.9.11:tests"
    testCompile "org.embulk:embulk-standards:0.9.11"
}

javadoc {
    options {
        locale = 'en_US'
        encoding = 'UTF-8'
    }
}

// bintray
bintray {
    // write at your bintray user name and api key to ~/.gradle/gradle.properties file:
    user = project.hasProperty('bintray_user') ? bintray_user : ''
    key = project.hasProperty('bintray_api_key') ? bintray_api_key : ''

    publications = ['bintrayMavenRelease']
    publish = true

    pkg {
        userOrg = 'embulk-output-elasticsearch'
        repo = 'maven'
        name = project.name
        desc = 'Elasticsearch output plugin for Embulk'
        websiteUrl = 'https://github.com/embulk/embulk-output-elasticsearch'
        issueTrackerUrl = 'https://github.com/embulk/embulk-output-elasticsearch/issues'
        vcsUrl = 'https://github.com/embulk/embulk-output-elasticsearch.git'
        licenses = ['Apache 2.0']
        labels = ['embulk', 'java']
        publicDownloadNumbers = true

        version {
            name = project.version
        }
    }
}
publishing {
    publications {
        bintrayMavenRelease(MavenPublication) {
            from components.java
            artifact testsJar
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

task classpath(type: Copy, dependsOn: ["jar"]) {
    doFirst { file("classpath").deleteDir() }
    from (configurations.runtime - configurations.provided + files(jar.archivePath))
    into "classpath"
}
clean { delete 'classpath' }

// add tests/javadoc/source jar tasks as artifacts to be released
task testsJar(type: Jar, dependsOn: classes) {
    classifier = 'tests'
    from sourceSets.test.output
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

checkstyle {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    toolVersion = '6.14.1'
}
checkstyleMain {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
checkstyleTest {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
task checkstyle(type: Checkstyle) {
    classpath = sourceSets.main.output + sourceSets.test.output
    source = sourceSets.main.allJava + sourceSets.test.allJava
}

//task copyDependencies(type:Copy) {
//    new File("$buildDir/libs/dependencies").mkdirs()
//    into "$buildDir/libs/dependencies" from configurations.runtime
//}

task gem(type: JRubyExec, dependsOn: ["build", "gemspec", "classpath"]) {
    jrubyArgs "-rrubygems/gem_runner", "-eGem::GemRunner.new.run(ARGV)", "build"
    script "build/gemspec"
    doLast { ant.move(file: "${project.name}-${project.version}.gem", todir: "pkg") }
}

task "package"(dependsOn: ["gemspec", "classpath"]) << {
    println "> Build succeeded."
    println "> You can run embulk with '-L ${file(".").absolutePath}' argument."
}

task gemspec << { file("build/gemspec").write($/
Gem::Specification.new do |spec|
  spec.name          = "${project.name}"
  spec.version       = "${project.version}"
  spec.authors       = ["Muga Nishizawa"]
  spec.summary       = %[Elasticsearch output plugin for Embulk]
  spec.description   = %[Elasticsearch output plugin is an Embulk plugin that loads records to Elasticsearch read by any input plugins. Search the input plugins by "embulk-input" keyword.]
  spec.email         = ["muga.nishizawa@gmail.com"]
  spec.licenses      = ["Apache 2.0"]
  spec.homepage      = "https://github.com/embulk/embulk-output-elasticsearch"

  spec.files         = `git ls-files`.split("\n") + Dir["classpath/*.jar"]
  spec.test_files    = spec.files.grep(%r"^(test|spec)/")
  spec.require_paths = ["lib"]
  spec.executables   = spec.files.grep(%r{^bin/}).map{ |f| File.basename(f) }
  spec.has_rdoc      = false

  spec.add_development_dependency "bundler", [">= 1.0"]
  spec.add_development_dependency "rake", [">= 10.0"]
  spec.add_development_dependency "test-unit", ["~> 3.0.2"]
end
/$)
}

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'org/embulk/output/elasticsearch/ElasticsearchOutputPlugin$1.class')
        })
    }
}
